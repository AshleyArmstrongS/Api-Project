type Query {
  #API info
  info: String
  #Users Info
  farmer: Farmer

  farmMedicationAdministrators: [String]!
  #Animal
  animal(id: ID!): Animal
  animalByTag(tag_number: Int!): Animal
  #Animals
  herd: [Animal]!
  animalsByProgeny(tag_number: Int!, male_female: Sex!): [Animal]!
  animalBySex(male_female: Sex!): [Animal]!
  animalByBreed(breed_type: String!): [Animal]!
  animalByPureBreed(pure_breed: Boolean!): [Animal]!
  animalsBornOn(date_of_birth: Date!): [Animal]!
  animalsBornAfter(date_of_birth: Date!): [Animal]!
  animalsBornBefore(date_of_birth: Date!): [Animal]!
  animalsBornBetween(after: Date!, before: Date!): [Animal]!
  animalsByCrossBreed(cross_breeds: String!): [Animal]!
  animalsByName(animal_name: String!): [Animal]!

  #Breed
  breedName(breed_name: String!): [Breed]!
  breedCode(breed_code: String!): [Breed]!

  #Medication
  medication(id: ID!): Medication

  #Medications
  medications: [Medication]!
  medicationsExpired: [Medication]!
  medicationsByName(medication_name: String!): [Medication]!

  #AdministeredMedication
  administeredMedication(id: ID): AdministeredMedication
  administeredMedications: [AdministeredMedication]!
  administeredMedicationOnDate(
    date_of_administration: Date!
  ): [AdministeredMedication]!

  #Group
  group(id: ID!): Group
  groupByName(group_name: String!): [Group]!
  groupByDescription(group_description: String!): [Group]!
}

type Mutation {
  #SignUp/Login
  signUp(
    email: String!
    password: String!
    first_name: String!
    second_name: String!
    farm_type: FarmType!
    farm_address: String
    password: String!
    email: String!
    herd_number: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  #Animal
  saveAnimal(
    id: ID
    tag_number: Int!
    sire_number: Int!
    mother_number: Int!
    male_female: Sex!
    breed_type: String!
    pure_breed: Boolean!
    animal_name: String!
    description: String!
    date_of_birth: Date!
  ): AnimalMutationResponse!
  deleteAnimal(id: ID!): AnimalMutationResponse!
  #Group
  saveGroup(
    id: ID
    group_name: String!
    group_description: String!
  ): GroupMutationResponse!
  deleteGroup(id: ID!): GroupMutationResponse!
  #Medication
  saveMedication(
    id: ID
    medication_name: String!
    supplied_by: String!
    quantity: Int!
    quantity_type: QuantityType!
    withdrawal_days_meat: Int
    withdrawal_days_dairy: Int
    batch_number: String!
    expiry_date: Date!
    purchase_date: Date!
    comments: String
  ): MedicationMutationResponse!
  #AdminMed
  saveAdminMed(
    id: ID
    date_of_administration: Date!
    quantity_administered: Int!
    administered_by: String!
    reason_for_administration: String!
    animal_id: ID
    medication_id: ID
  ): AdminMedMutationResponse!
  deleteAdministeredMedication(
    id: ID
    medication_id: ID
    quantity_administered: Int
  ): AdminMedMutationResponse!
}

#OBJECT_TYPES
type Animal {
  id: ID
  tag_number: Int
  herd_number: String
  sire_number: Int
  mother_number: Int
  male_female: Sex
  breed_type: String
  pure_breed: Boolean
  animal_name: String
  description: String
  date_of_birth: Date
}
type Medication {
  id: ID
  medication_name: String
  supplied_by: String
  quantity: Int
  quantity_type: QuantityType
  withdrawal_days_meat: Int
  withdrawal_days_dairy: Int
  remaining_quantity: Int
  batch_number: String
  expiry_date: Date
  purchase_date: Date
  comments: String
}
type AdministeredMedication {
  id: ID
  date_of_administration: Date
  quantity_administered: Int
  quantity_type: QuantityType
  administered_by: String
  reason_for_administration: String
  animal_id: ID
  medication_id: ID
}
type Farmer {
  id: ID
  first_name: String
  second_name: String
  farm_type: FarmType
  farm_address: String
  email: String
  herd_number: String
}
type Group {
  id: ID
  group_name: String
  group_description: String
}
type Breed {
  id: ID
  breed_name: String
  breed_code: String
}
#RESPONSE_TYPES
type AuthPayload {
  responseCheck: ResponseCheck!
  token: String
  farmer: Farmer
}
type AnimalMutationResponse {
  responseCheck: ResponseCheck!
  animal: Animal
}
type GroupMutationResponse {
  responseCheck: ResponseCheck!
  group: Group
}
type MedicationMutationResponse {
  responseCheck: ResponseCheck!
  medication: Medication
}
type AdminMedMutationResponse {
  responseCheck: ResponseCheck!
  administeredMedication: AdministeredMedication
}
type ResponseCheck {
  success: Boolean!
  message: String!
}
#ENUMS
enum Sex {
  M
  F
}
enum QuantityType {
  ML
  MG
  COUNT
  UNASSIGNED
}
enum FarmType {
  DAIRY
  BEEF
  SUCKLER
  OTHER
}
#CUSTOM_SCALARS
scalar Date
type date {
  created: Date
}
